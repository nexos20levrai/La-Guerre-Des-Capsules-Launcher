name: Build, Sign and Release with Cosign

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get version
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Create Release (Draft)
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }} # Utilisation du PAT pour crÃ©er la release en mode draft
        with:
          tag_name: ${{ env.version }}
          release_name: release ${{ env.version }}
          draft: true
          prerelease: ${{ contains(env.version, 'beta') || contains(env.version, 'alpha') }}

  build-and-sign:
    needs: create-release
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22.x

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install Dependencies
        run: npm ci

      - name: Build the Electron app
        run: npm run build

      - name: Install Cosign
        uses: sigstore/cosign-installer@main

      - name: Set up Cosign keys
        run: |
          echo "${{ secrets.SIGSTORE_PRIVATE_KEY }}" > cosign.key
          echo "${{ secrets.SIGSTORE_PUBLIC_KEY }}" > cosign.pub

      - name: Sign the .exe with Cosign
        run: |
          cosign sign --key cosign.key ./path-to-your-build-file.exe
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
